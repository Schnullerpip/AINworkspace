package aufgabe6;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;

import javax.swing.JFrame;

public class PythagorasTree extends JFrame{

	/**
	 * 
	 */
	private static final long serialVersionUID = 4073714969229736633L;
	private static final int MINIMAL_EDGE_LENGTH = 5;
	private static final int PITCH = 30;
	private static final Dimension screenSize;
	private static final double screenHeight, screenWidth;
	static{
		screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		screenHeight = screenSize.getHeight();
		screenWidth = screenSize.getWidth();
	}
	
	
	public PythagorasTree(){
		this.setTitle("PythagorasTree Application");
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setExtendedState( this.getExtendedState()|JFrame.MAXIMIZED_BOTH );
		this.setVisible(true);
	}
	
	private void drawPythagorsTree(){
		drawPythagorasTree(50, new Point(0, 0));
	}
	
	private void drawPythagorasTree(int edgeLength, Point p){
		if(edgeLength <= MINIMAL_EDGE_LENGTH)return;
		
		double s,c;
		s = edgeLength*Math.sin(PITCH);
		c = edgeLength*Math.cos(PITCH);
		
		Point A, B, C, D;
		A = p;
		B = new Point((int)(A.getX()+c), (int)(A.getY()+s));
		C = new Point((int)(A.getX()+c-s), (int)(A.getY()+s+c));
		D = new Point((int)(A.getX()-s), (int)(A.getY()+c));
		StdDraw.line(p.getX(), p.getY(), p.getX()+edgeLength, p.getY()+edgeLength);	//ObereKante
		drawPythagorasTree(edgeLength-5, p);
		
	}

}
